FIXME: use data.ok for fetching (if possible)
FIXME: fix SSR and CSR for whole applicaton
FIXME: import SSR to CSR as a children
FIXME: use .env file for server side
FIXME: create a loading for first page



TODO: add page routes and delete some func's
TODO: add loading.jsx to all pages, use <Suspense></Suspense>, it only works for server clients
TODO: add not-found.jsx or notfound() from next/navigation for 404 and false data
TODO: add error.jsx
TODO: add api folder

new
TODO: add milion.js
TODO: add passport.js

database
TODO: create online database for pictures and hero name request
 
git
TODO: turn off auto merge for git

sec:
TODO: Prevent cross-site request forgery (CSRF) attacks
TODO: Protect against cross-site scripting (XSS) attacks

TODO: Implement input validation and sanitization:
            Validate and sanitize all user inputs on the server-side to prevent common security vulnerabilities like SQL injection, cross-site scripting (XSS), and command injection attacks.
            Use libraries like validator or built-in validation functions to validate user inputs against expected formats and data types.
 
TODO: Secure session management:
            Use secure session management techniques like JWT (JSON Web Tokens) or session cookies with secure settings to manage user sessions.
            Set appropriate expiration times for sessions and implement mechanisms for session renewal or reauthentication.
            Use session-related security headers like HttpOnly and SameSite to mitigate cross-site scripting (XSS) and cross-site request forgery (CSRF) attacks.
 
TODO: Perform security audits and testing
            Regularly conduct security audits and code reviews to identify and address potential security vulnerabilities.
            Perform automated security testing and vulnerability scanning using tools like OWASP ZAP, Nessus, or Snyk to detect common security issues.

Discord
TODO: add discord Bot